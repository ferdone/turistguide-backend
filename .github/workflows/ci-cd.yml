name: CI/CD Pipeline

on:
  push:
    branches: [main, master]
  pull_request:
    branches: [main, master]

jobs:
  build:
    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: turistguidedb
        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3

    steps:
      - uses: actions/checkout@v2

      - name: Set up JDK 11
        uses: actions/setup-java@v2
        with:
          java-version: "11"
          distribution: "adopt"

      - name: Initialize Database
        run: |
          mysql -h 127.0.0.1 -P 3306 -u root -proot turistguidedb < database/turistguidedb.sql

      - name: Build with Maven
        run: mvn -B package --file pom.xml

      - name: Run Tests
        run: mvn test

  code-inspection:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Qodana Scan
        uses: JetBrains/qodana-action@v2023.2
        with:
          cache-files-key: qodana-cache

      - name: Save Qodana Results
        uses: actions/upload-artifact@v2
        with:
          name: qodana-results
          path: ${{ runner.temp }}/qodana/results/report

  deploy:
    needs: [build, code-inspection]
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Set up JDK 11
        uses: actions/setup-java@v2
        with:
          java-version: "11"
          distribution: "adopt"

      - name: Build with Maven
        run: mvn -B package --file pom.xml -DskipTests

      - name: Deploy to Azure Web App
        uses: azure/webapps-deploy@v2
        with:
          app-name: 'turistguide-app'
          publish-profile: ${{ secrets.AZURE_WEBAPP_PUBLISH_PROFILE }}

      - name: Azure SQL Deploy
        run: |
          echo "Deploying database..."
          sqlcmd -S ${{ secrets.AZURE_SQL_SERVER }} -d ${{ secrets.AZURE_SQL_DB }} -U ${{ secrets.AZURE_SQL_USERNAME }} -P ${{ secrets.AZURE_SQL_PASSWORD }} -i database/turistguidedb.sql
